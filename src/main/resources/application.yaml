
server:
  port: 8089
spring:

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #url: jdbc:mysql://127.0.0.1:3306/suixing?useSSL=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    url: jdbc:mysql://localhost:3306/suixing?useSSL=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
# Elasticsearch
  elasticsearch:
    uris: localhost:9200
    connection-timeout: 5s
    socket-timeout: 30s
  #    掐头去尾
  mvc: #静态资源配置
    view:
      prefix: /
      suffix: .html
      hiddenmethod:
        filter:
          enabled: true

  #模板引擎
  thymeleaf:
    prefix: classpath:static/
    suffix: .html
    cache: false
# Redis
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    database: 0
    pool:
      max-active: 100 # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-idle: 8  # 连接池中的最大空闲连接
      min-idle: 0  # 连接池中的最小空闲连接
#      RabbitMQ
  rabbitmq:
    host: localhost
    username: guest
    password: guest
    port: 5672
#    publisher-confirm-type: correlated
    publisher-returns: true
    listener:
      simple:
        acknowledge-mode: manual  #消息手动确认
        #削峰限流
        concurrency: 4 #消费者数量
        max-concurrency: 4  #消费者最大数量
        prefetch: 1  #消费者每次从队列中取几个消息
        default-requeue-rejected: true #消息消费失败后，重新进入消费队列中
        #重试策略
        retry:
          initial-interval: 1000 #1秒后重试
          enabled: true #启用发布重试
          max-attempts: 3 #传递消息的最大尝试次数
          max-interval: 10000 #尝试的最大时间间隔
          multiplier: 1.0 #应用于先前传递重试时间间隔的乘数
    template:
      mandatory: true

    virtual-host: /
  cache:
    type: REDIS

# 数据库表主键自增
mybatis-plus:
  global-config:
    db-config:
      id-type: auto

